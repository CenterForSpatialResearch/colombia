import csv
# import numpy as np

# Headers that correspond to Col headers in our CSV to be read
fieldnames = ['cod_persona', 'param_hecho', 'f_ocurrencia_hecho', 'dane_ocurrencia', 'f_reporte_hecho', 'tipo_pais', 'dane_decla', 'f_llegada', 'dane_llegada', 'tipo_desplazamiento', 'autor_guerrillas', 'autor_paramilitares', 'autor_fuerza_publica', 'autor_bacrim', 'autor_otros', 'autor_no_identifica', 'tipo_victima', 'fecha_valoracion', 'cod_caso', 'vvg', 'dane_ub', 'mpio_ocurrencia', 'mpio_llegada', 'mpio_ubicacion', 'mpio_declaracion', 'gid', 'tipo_doc', 'genero_hom', 'discap', 'pert_etnica', 'f_nacimiento', 'cuentadecod_persona', 'highlight']

inputFileName = '1k_opened_correct_wcs'

# Open the CSV to be read
inputFile = open(inputFileName+'.csv', "rb")
reader = csv.reader(inputFile, delimiter=',', quotechar='|')

# Create our read and write lists
readList = []
writeList = []


#Place all the data in a list so we can skip the first entry of the data
for row in reader:
	readList.append(row)

# Get rid of header row
readList = readList[1:]

# Flip the list so that each index of newList corresponds to a column of data
flipList = zip(*readList)

# Create a unique, sorted list of the parameter
list_param_hecho = flipList[fieldnames.index('param_hecho')]
list_param_hecho = list(map(int, list_param_hecho))
unique_param_hecho = list(set(list_param_hecho))

print "unique p_h: ", unique_param_hecho

# Count the number of occurances of those items
count_param_hecho = []
for item in unique_param_hecho:
	count_param_hecho.append(list_param_hecho.count(item))

print "count p_h: ", count_param_hecho

#Have a running total of this items rank
currentRank_param_hecho = []
runningRank = 0
for i in range(0,len(count_param_hecho)):
	# print count_param_hecho[i], i
	
	if i == 0:
		currentRank_param_hecho.append(0)
	elif i < len(count_param_hecho):
		currentRank_param_hecho.append(runningRank)
	else:
		currentRank_param_hecho.append(count_param_hecho[i])

	runningRank = runningRank + count_param_hecho[i]

print "current Rank: ", currentRank_param_hecho

# Ok Now run through original list again and now increment currentRank list as we run through and this will be our uniqueRank
uniqueRank_param_hecho = []
for item in list_param_hecho:

	# print item, unique_param_hecho.index(item)

	#add the current count to the list
	uniqueRank_param_hecho.append(currentRank_param_hecho[unique_param_hecho.index(item)])

	#incrememnt this items currentRank
	currentRank_param_hecho[unique_param_hecho.index(item)] += 1 

# print "param_hecho list: ", list_param_hecho
# print "uniqueRank p_h l: ", uniqueRank_param_hecho
# print "test unique rank : ", set(uniqueRank_param_hecho)

outputList = []

# Now let's add this sorted rank to our original dataset and to the header table
flipList.append(uniqueRank_param_hecho)				#append our uniqueRanked data to our master list
flipList = zip(*flipList)							#un flip our flippedlistlist
# print flipList[0]
fieldnames.append("uniqueRank_param_hecho")			#append our uniqueRankedFieldNames
outputList.append(fieldnames)						#include our header column (as a list) in our output list

outputList = outputList + flipList 					#concate the header list with our flipped list
# print outputList[2]

#Export the data toa csv
outputFileName = inputFileName + "_OUTPUT"
outputFile = open(outputFileName+".csv", 'wb')
wr = csv.writer(outputFile, delimiter=",")
for row in outputList:
	wr.writerow(row)

# Close all the files
outputFile.close()
inputFile.close()