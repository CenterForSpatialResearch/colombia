'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.toLowPrecision = toLowPrecision;
/**
 * Covert all numbers in a deep structure to a given precision, allowing
 * reliable float comparisons. Converts data in-place.
 * @param  {mixed} input      Input data
 * @param  {Number} [precision] Desired precision
 * @return {mixed}            Input data, with all numbers converted
 */
function toLowPrecision(input) {
  var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 11;

  /* eslint-disable guard-for-in */
  if (typeof input === 'number') {
    input = Number(input.toPrecision(precision));
  }
  if (Array.isArray(input)) {
    input = input.map(function (item) {
      return toLowPrecision(item, precision);
    });
  }
  if ((typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object') {
    for (var key in input) {
      input[key] = toLowPrecision(input[key], precision);
    }
  }
  return input;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90ZXN0L3Rlc3QtdXRpbHMuanMiXSwibmFtZXMiOlsidG9Mb3dQcmVjaXNpb24iLCJpbnB1dCIsInByZWNpc2lvbiIsIk51bWJlciIsInRvUHJlY2lzaW9uIiwiQXJyYXkiLCJpc0FycmF5IiwibWFwIiwiaXRlbSIsImtleSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7UUFPZ0JBLGMsR0FBQUEsYztBQVBoQjs7Ozs7OztBQU9PLFNBQVNBLGNBQVQsQ0FBd0JDLEtBQXhCLEVBQStDO0FBQUEsTUFBaEJDLFNBQWdCLHVFQUFKLEVBQUk7O0FBQ3BEO0FBQ0EsTUFBSSxPQUFPRCxLQUFQLEtBQWlCLFFBQXJCLEVBQStCO0FBQzdCQSxZQUFRRSxPQUFPRixNQUFNRyxXQUFOLENBQWtCRixTQUFsQixDQUFQLENBQVI7QUFDRDtBQUNELE1BQUlHLE1BQU1DLE9BQU4sQ0FBY0wsS0FBZCxDQUFKLEVBQTBCO0FBQ3hCQSxZQUFRQSxNQUFNTSxHQUFOLENBQVU7QUFBQSxhQUFRUCxlQUFlUSxJQUFmLEVBQXFCTixTQUFyQixDQUFSO0FBQUEsS0FBVixDQUFSO0FBQ0Q7QUFDRCxNQUFJLFFBQU9ELEtBQVAseUNBQU9BLEtBQVAsT0FBaUIsUUFBckIsRUFBK0I7QUFDN0IsU0FBSyxJQUFNUSxHQUFYLElBQWtCUixLQUFsQixFQUF5QjtBQUN2QkEsWUFBTVEsR0FBTixJQUFhVCxlQUFlQyxNQUFNUSxHQUFOLENBQWYsRUFBMkJQLFNBQTNCLENBQWI7QUFDRDtBQUNGO0FBQ0QsU0FBT0QsS0FBUDtBQUNEIiwiZmlsZSI6InRlc3QtdXRpbHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvdmVydCBhbGwgbnVtYmVycyBpbiBhIGRlZXAgc3RydWN0dXJlIHRvIGEgZ2l2ZW4gcHJlY2lzaW9uLCBhbGxvd2luZ1xuICogcmVsaWFibGUgZmxvYXQgY29tcGFyaXNvbnMuIENvbnZlcnRzIGRhdGEgaW4tcGxhY2UuXG4gKiBAcGFyYW0gIHttaXhlZH0gaW5wdXQgICAgICBJbnB1dCBkYXRhXG4gKiBAcGFyYW0gIHtOdW1iZXJ9IFtwcmVjaXNpb25dIERlc2lyZWQgcHJlY2lzaW9uXG4gKiBAcmV0dXJuIHttaXhlZH0gICAgICAgICAgICBJbnB1dCBkYXRhLCB3aXRoIGFsbCBudW1iZXJzIGNvbnZlcnRlZFxuICovXG5leHBvcnQgZnVuY3Rpb24gdG9Mb3dQcmVjaXNpb24oaW5wdXQsIHByZWNpc2lvbiA9IDExKSB7XG4gIC8qIGVzbGludC1kaXNhYmxlIGd1YXJkLWZvci1pbiAqL1xuICBpZiAodHlwZW9mIGlucHV0ID09PSAnbnVtYmVyJykge1xuICAgIGlucHV0ID0gTnVtYmVyKGlucHV0LnRvUHJlY2lzaW9uKHByZWNpc2lvbikpO1xuICB9XG4gIGlmIChBcnJheS5pc0FycmF5KGlucHV0KSkge1xuICAgIGlucHV0ID0gaW5wdXQubWFwKGl0ZW0gPT4gdG9Mb3dQcmVjaXNpb24oaXRlbSwgcHJlY2lzaW9uKSk7XG4gIH1cbiAgaWYgKHR5cGVvZiBpbnB1dCA9PT0gJ29iamVjdCcpIHtcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBpbnB1dCkge1xuICAgICAgaW5wdXRba2V5XSA9IHRvTG93UHJlY2lzaW9uKGlucHV0W2tleV0sIHByZWNpc2lvbik7XG4gICAgfVxuICB9XG4gIHJldHVybiBpbnB1dDtcbn1cbiJdfQ==