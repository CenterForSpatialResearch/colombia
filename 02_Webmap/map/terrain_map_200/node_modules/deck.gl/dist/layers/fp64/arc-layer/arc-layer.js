'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _lib = require('../../../lib');

var _shaderUtils = require('../../../shader-utils');

var _luma = require('luma.gl');

var _fp = require('../../../lib/utils/fp64');

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // Copyright (c) 2015 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

var glslify = require('glslify');

var DEFAULT_COLOR = [0, 0, 255, 255];

var defaultGetSourcePosition = function defaultGetSourcePosition(x) {
  return x.sourcePosition;
};
var defaultGetTargetPosition = function defaultGetTargetPosition(x) {
  return x.targetPosition;
};
var defaultGetColor = function defaultGetColor(x) {
  return x.color;
};

var ArcLayer64 = function (_Layer) {
  _inherits(ArcLayer64, _Layer);

  /**
   * @classdesc
   * ArcLayer
   *
   * @class
   * @param {object} props
   */
  function ArcLayer64() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        _ref$getSourcePositio = _ref.getSourcePosition,
        getSourcePosition = _ref$getSourcePositio === undefined ? defaultGetSourcePosition : _ref$getSourcePositio,
        _ref$getTargetPositio = _ref.getTargetPosition,
        getTargetPosition = _ref$getTargetPositio === undefined ? defaultGetTargetPosition : _ref$getTargetPositio,
        _ref$getSourceColor = _ref.getSourceColor,
        getSourceColor = _ref$getSourceColor === undefined ? defaultGetColor : _ref$getSourceColor,
        _ref$getTargetColor = _ref.getTargetColor,
        getTargetColor = _ref$getTargetColor === undefined ? defaultGetColor : _ref$getTargetColor,
        _ref$strokeWidth = _ref.strokeWidth,
        strokeWidth = _ref$strokeWidth === undefined ? 1 : _ref$strokeWidth,
        props = _objectWithoutProperties(_ref, ['getSourcePosition', 'getTargetPosition', 'getSourceColor', 'getTargetColor', 'strokeWidth']);

    _classCallCheck(this, ArcLayer64);

    return _possibleConstructorReturn(this, (ArcLayer64.__proto__ || Object.getPrototypeOf(ArcLayer64)).call(this, _extends({
      getSourcePosition: getSourcePosition,
      getTargetPosition: getTargetPosition,
      getSourceColor: getSourceColor,
      getTargetColor: getTargetColor,
      strokeWidth: strokeWidth
    }, props)));
  }

  _createClass(ArcLayer64, [{
    key: 'initializeState',
    value: function initializeState() {
      var gl = this.context.gl;
      var attributeManager = this.state.attributeManager;


      attributeManager.addInstanced({
        instanceSourceColors: {
          size: 4,
          type: _luma.GL.UNSIGNED_BYTE,
          update: this.calculateInstanceSourceColors
        },
        instanceTargetColors: {
          size: 4,
          type: _luma.GL.UNSIGNED_BYTE,
          update: this.calculateInstanceTargetColors
        },
        instanceSourcePositionsFP64: { size: 4, update: this.calculateInstanceSourcePositions },
        instanceTargetPositionsFP64: { size: 4, update: this.calculateInstanceTargetPositions }
      });

      this.setState({ model: this.createModel(gl) });
    }
  }, {
    key: 'draw',
    value: function draw(_ref2) {
      var uniforms = _ref2.uniforms;
      var gl = this.context.gl;

      var lineWidth = this.screenToDevicePixels(this.props.strokeWidth);
      gl.lineWidth(lineWidth);
      this.state.model.render(uniforms);
      // Setting line width back to 1 is here to workaround a Google Chrome bug
      // gl.clear() and gl.isEnabled() will return GL_INVALID_VALUE even with
      // correct parameter
      // This is not happening on Safari and Firefox
      gl.lineWidth(1.0);
    }
  }, {
    key: 'createModel',
    value: function createModel(gl) {
      var positions = [];
      var NUM_SEGMENTS = 50;
      for (var i = 0; i < NUM_SEGMENTS; i++) {
        positions = [].concat(_toConsumableArray(positions), [i, i, i]);
      }
      return new _luma.Model(_extends({
        gl: gl,
        id: this.props.id
      }, (0, _shaderUtils.assembleShaders)(gl, {
        vs: '#define GLSLIFY 1\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n#define SHADER_NAME arc-layer-64-vertex-shader\n\nconst float N = 49.0;\n\nattribute vec3 positions;\nattribute vec4 instanceSourceColors;\nattribute vec4 instanceTargetColors;\nattribute vec3 instancePickingColors;\nattribute vec4 instanceSourcePositionsFP64;\nattribute vec4 instanceTargetPositionsFP64;\n\nuniform float opacity;\nuniform float renderPickingBuffer;\n\nvarying vec4 vColor;\n\nvec2 paraboloid_fp64(vec2 source[2], vec2 target[2], float ratio) {\n\n  vec2 x[2];\n  vec2_mix_fp64(source, target, ratio, x);\n  vec2 center[2];\n  vec2_mix_fp64(source, target, 0.5, center);\n\n  vec2 dSourceCenter = vec2_distance_fp64(source, center);\n  vec2 dXCenter = vec2_distance_fp64(x, center);\n  return mul_fp64(sum_fp64(dSourceCenter, dXCenter), sub_fp64(dSourceCenter, dXCenter));\n}\n\nvoid main(void) {\n  vec2 projectedSourceCoord[2];\n  project_position_fp64(instanceSourcePositionsFP64, projectedSourceCoord);\n  vec2 projectedTargetCoord[2];\n  project_position_fp64(instanceTargetPositionsFP64, projectedTargetCoord);\n\n  float segmentRatio = smoothstep(0.0, 1.0, positions.x / N);\n\n  vec2 mixed_temp[2];\n\n  vec2_mix_fp64(projectedSourceCoord, projectedTargetCoord, segmentRatio, mixed_temp);\n\n  vec2 vertex_pos_modelspace[4];\n\n  vertex_pos_modelspace[0] = mixed_temp[0];\n  vertex_pos_modelspace[1] = mixed_temp[1];\n\n  vec2 vertex_height = paraboloid_fp64(projectedSourceCoord, projectedTargetCoord, segmentRatio);\n  if (vertex_height.x < 0.0 || (vertex_height.x == 0.0 && vertex_height.y <= 0.0)) vertex_height = vec2(0.0, 0.0);\n\n  vertex_pos_modelspace[2] = sqrt_fp64(vertex_height);\n  vertex_pos_modelspace[3] = vec2(1.0, 0.0);\n\n  gl_Position = project_to_clipspace_fp64(vertex_pos_modelspace);\n\n  vec4 color = mix(instanceSourceColors, instanceTargetColors, segmentRatio) / 255.;\n\n  vColor = mix(\n    vec4(color.rgb, color.a * opacity),\n    vec4(instancePickingColors / 255., 1.),\n    renderPickingBuffer\n  );\n}\n',
        fs: '// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the "Software"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n#define SHADER_NAME arc-layer-fragment-shader\n\n#ifdef GL_ES\nprecision highp float;\n#define GLSLIFY 1\n#endif\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  gl_FragColor = vColor;\n}\n',
        fp64: true,
        project64: true
      }), {
        geometry: new _luma.Geometry({
          drawMode: _luma.GL.LINE_STRIP,
          positions: new Float32Array(positions)
        }),
        isInstanced: true
      }));
    }
  }, {
    key: 'calculateInstanceSourcePositions',
    value: function calculateInstanceSourcePositions(attribute) {
      var _props = this.props,
          data = _props.data,
          getSourcePosition = _props.getSourcePosition;
      var value = attribute.value,
          size = attribute.size;

      var i = 0;
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var object = _step.value;

          var sourcePosition = getSourcePosition(object);

          var _fp64ify = (0, _fp.fp64ify)(sourcePosition[0]);

          var _fp64ify2 = _slicedToArray(_fp64ify, 2);

          value[i + 0] = _fp64ify2[0];
          value[i + 1] = _fp64ify2[1];

          var _fp64ify3 = (0, _fp.fp64ify)(sourcePosition[1]);

          var _fp64ify4 = _slicedToArray(_fp64ify3, 2);

          value[i + 2] = _fp64ify4[0];
          value[i + 3] = _fp64ify4[1];

          i += size;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
  }, {
    key: 'calculateInstanceTargetPositions',
    value: function calculateInstanceTargetPositions(attribute) {
      var _props2 = this.props,
          data = _props2.data,
          getTargetPosition = _props2.getTargetPosition;
      var value = attribute.value,
          size = attribute.size;

      var i = 0;
      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var object = _step2.value;

          var targetPosition = getTargetPosition(object);

          var _fp64ify5 = (0, _fp.fp64ify)(targetPosition[0]);

          var _fp64ify6 = _slicedToArray(_fp64ify5, 2);

          value[i + 0] = _fp64ify6[0];
          value[i + 1] = _fp64ify6[1];

          var _fp64ify7 = (0, _fp.fp64ify)(targetPosition[1]);

          var _fp64ify8 = _slicedToArray(_fp64ify7, 2);

          value[i + 2] = _fp64ify8[0];
          value[i + 3] = _fp64ify8[1];

          i += size;
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }
    }
  }, {
    key: 'calculateInstanceSourceColors',
    value: function calculateInstanceSourceColors(attribute) {
      var _props3 = this.props,
          data = _props3.data,
          getSourceColor = _props3.getSourceColor;
      var value = attribute.value,
          size = attribute.size;

      var i = 0;
      var _iteratorNormalCompletion3 = true;
      var _didIteratorError3 = false;
      var _iteratorError3 = undefined;

      try {
        for (var _iterator3 = data[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
          var object = _step3.value;

          var color = getSourceColor(object) || DEFAULT_COLOR;
          value[i + 0] = color[0];
          value[i + 1] = color[1];
          value[i + 2] = color[2];
          value[i + 3] = isNaN(color[3]) ? DEFAULT_COLOR[3] : color[3];
          i += size;
        }
      } catch (err) {
        _didIteratorError3 = true;
        _iteratorError3 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion3 && _iterator3.return) {
            _iterator3.return();
          }
        } finally {
          if (_didIteratorError3) {
            throw _iteratorError3;
          }
        }
      }
    }
  }, {
    key: 'calculateInstanceTargetColors',
    value: function calculateInstanceTargetColors(attribute) {
      var _props4 = this.props,
          data = _props4.data,
          getTargetColor = _props4.getTargetColor;
      var value = attribute.value,
          size = attribute.size;

      var i = 0;
      var _iteratorNormalCompletion4 = true;
      var _didIteratorError4 = false;
      var _iteratorError4 = undefined;

      try {
        for (var _iterator4 = data[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
          var object = _step4.value;

          var color = getTargetColor(object) || DEFAULT_COLOR;
          value[i + 0] = color[0];
          value[i + 1] = color[1];
          value[i + 2] = color[2];
          value[i + 3] = isNaN(color[3]) ? DEFAULT_COLOR[3] : color[3];
          i += size;
        }
      } catch (err) {
        _didIteratorError4 = true;
        _iteratorError4 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion4 && _iterator4.return) {
            _iterator4.return();
          }
        } finally {
          if (_didIteratorError4) {
            throw _iteratorError4;
          }
        }
      }
    }
  }]);

  return ArcLayer64;
}(_lib.Layer);

ArcLayer64.layerName = 'ArcLayer64';
exports.default = ArcLayer64;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9sYXllcnMvZnA2NC9hcmMtbGF5ZXIvYXJjLWxheWVyLmpzIl0sIm5hbWVzIjpbImdsc2xpZnkiLCJyZXF1aXJlIiwiREVGQVVMVF9DT0xPUiIsImRlZmF1bHRHZXRTb3VyY2VQb3NpdGlvbiIsIngiLCJzb3VyY2VQb3NpdGlvbiIsImRlZmF1bHRHZXRUYXJnZXRQb3NpdGlvbiIsInRhcmdldFBvc2l0aW9uIiwiZGVmYXVsdEdldENvbG9yIiwiY29sb3IiLCJBcmNMYXllcjY0IiwiZ2V0U291cmNlUG9zaXRpb24iLCJnZXRUYXJnZXRQb3NpdGlvbiIsImdldFNvdXJjZUNvbG9yIiwiZ2V0VGFyZ2V0Q29sb3IiLCJzdHJva2VXaWR0aCIsInByb3BzIiwiZ2wiLCJjb250ZXh0IiwiYXR0cmlidXRlTWFuYWdlciIsInN0YXRlIiwiYWRkSW5zdGFuY2VkIiwiaW5zdGFuY2VTb3VyY2VDb2xvcnMiLCJzaXplIiwidHlwZSIsIlVOU0lHTkVEX0JZVEUiLCJ1cGRhdGUiLCJjYWxjdWxhdGVJbnN0YW5jZVNvdXJjZUNvbG9ycyIsImluc3RhbmNlVGFyZ2V0Q29sb3JzIiwiY2FsY3VsYXRlSW5zdGFuY2VUYXJnZXRDb2xvcnMiLCJpbnN0YW5jZVNvdXJjZVBvc2l0aW9uc0ZQNjQiLCJjYWxjdWxhdGVJbnN0YW5jZVNvdXJjZVBvc2l0aW9ucyIsImluc3RhbmNlVGFyZ2V0UG9zaXRpb25zRlA2NCIsImNhbGN1bGF0ZUluc3RhbmNlVGFyZ2V0UG9zaXRpb25zIiwic2V0U3RhdGUiLCJtb2RlbCIsImNyZWF0ZU1vZGVsIiwidW5pZm9ybXMiLCJsaW5lV2lkdGgiLCJzY3JlZW5Ub0RldmljZVBpeGVscyIsInJlbmRlciIsInBvc2l0aW9ucyIsIk5VTV9TRUdNRU5UUyIsImkiLCJpZCIsInZzIiwiZnMiLCJmcDY0IiwicHJvamVjdDY0IiwiZ2VvbWV0cnkiLCJkcmF3TW9kZSIsIkxJTkVfU1RSSVAiLCJGbG9hdDMyQXJyYXkiLCJpc0luc3RhbmNl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QUFNYixJQUFJLENBQVYsSUFBZWxDLE1BQU0sQ0FBTixDQUFmO0FBQ0ErQyxnQkFBTWIsSUFBSSxDQUFWLElBQWVsQyxNQUFNLENBQU4sQ0FBZjtBQUNBK0MsZ0JBQU1iLElBQUksQ0FBVixJQUFlZSxNQUFNakQsTUFBTSxDQUFOLENBQU4sSUFBa0JQLGNBQWMsQ0FBZCxDQUFsQixHQUFxQ08sTUFBTSxDQUFOLENBQXBEO0FBQ0FrQyxlQUFLcEIsSUFBTDtBQUNEO0FBWHNDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFZeEM7Ozs7OztBQXhJa0JiLFUsQ0FFWmlELFMsR0FBWSxZO2tCQUZBakQsVSIsImZpbGUiOiJhcmMtbGF5ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMTUgVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuLy8gVEhFIFNPRlRXQVJFLlxuXG5pbXBvcnQge0xheWVyfSBmcm9tICcuLi8uLi8uLi9saWInO1xuaW1wb3J0IHthc3NlbWJsZVNoYWRlcnN9IGZyb20gJy4uLy4uLy4uL3NoYWRlci11dGlscyc7XG5pbXBvcnQge0dMLCBNb2RlbCwgR2VvbWV0cnl9IGZyb20gJ2x1bWEuZ2wnO1xuaW1wb3J0IHtmcDY0aWZ5fSBmcm9tICcuLi8uLi8uLi9saWIvdXRpbHMvZnA2NCc7XG5cbmNvbnN0IGdsc2xpZnkgPSByZXF1aXJlKCdnbHNsaWZ5Jyk7XG5cbmNvbnN0IERFRkFVTFRfQ09MT1IgPSBbMCwgMCwgMjU1LCAyNTVdO1xuXG5jb25zdCBkZWZhdWx0R2V0U291cmNlUG9zaXRpb24gPSB4ID0+IHguc291cmNlUG9zaXRpb247XG5jb25zdCBkZWZhdWx0R2V0VGFyZ2V0UG9zaXRpb24gPSB4ID0+IHgudGFyZ2V0UG9zaXRpb247XG5jb25zdCBkZWZhdWx0R2V0Q29sb3IgPSB4ID0+IHguY29sb3I7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFyY0xheWVyNjQgZXh0ZW5kcyBMYXllciB7XG5cbiAgc3RhdGljIGxheWVyTmFtZSA9ICdBcmNMYXllcjY0JztcblxuICAvKipcbiAgICogQGNsYXNzZGVzY1xuICAgKiBBcmNMYXllclxuICAgKlxuICAgKiBAY2xhc3NcbiAgICogQHBhcmFtIHtvYmplY3R9IHByb3BzXG4gICAqL1xuICBjb25zdHJ1Y3Rvcih7XG4gICAgZ2V0U291cmNlUG9zaXRpb24gPSBkZWZhdWx0R2V0U291cmNlUG9zaXRpb24sXG4gICAgZ2V0VGFyZ2V0UG9zaXRpb24gPSBkZWZhdWx0R2V0VGFyZ2V0UG9zaXRpb24sXG4gICAgZ2V0U291cmNlQ29sb3IgPSBkZWZhdWx0R2V0Q29sb3IsXG4gICAgZ2V0VGFyZ2V0Q29sb3IgPSBkZWZhdWx0R2V0Q29sb3IsXG4gICAgc3Ryb2tlV2lkdGggPSAxLFxuICAgIC4uLnByb3BzXG4gIH0gPSB7fSkge1xuICAgIHN1cGVyKHtcbiAgICAgIGdldFNvdXJjZVBvc2l0aW9uLFxuICAgICAgZ2V0VGFyZ2V0UG9zaXRpb24sXG4gICAgICBnZXRTb3VyY2VDb2xvcixcbiAgICAgIGdldFRhcmdldENvbG9yLFxuICAgICAgc3Ryb2tlV2lkdGgsXG4gICAgICAuLi5wcm9wc1xuICAgIH0pO1xuICB9XG5cbiAgaW5pdGlhbGl6ZVN0YXRlKCkge1xuICAgIGNvbnN0IHtnbH0gPSB0aGlzLmNvbnRleHQ7XG4gICAgY29uc3Qge2F0dHJpYnV0ZU1hbmFnZXJ9ID0gdGhpcy5zdGF0ZTtcblxuICAgIGF0dHJpYnV0ZU1hbmFnZXIuYWRkSW5zdGFuY2VkKHtcbiAgICAgIGluc3RhbmNlU291cmNlQ29sb3JzOiB7XG4gICAgICAgIHNpemU6IDQsXG4gICAgICAgIHR5cGU6IEdMLlVOU0lHTkVEX0JZVEUsXG4gICAgICAgIHVwZGF0ZTogdGhpcy5jYWxjdWxhdGVJbnN0YW5jZVNvdXJjZUNvbG9yc1xuICAgICAgfSxcbiAgICAgIGluc3RhbmNlVGFyZ2V0Q29sb3JzOiB7XG4gICAgICAgIHNpemU6IDQsXG4gICAgICAgIHR5cGU6IEdMLlVOU0lHTkVEX0JZVEUsXG4gICAgICAgIHVwZGF0ZTogdGhpcy5jYWxjdWxhdGVJbnN0YW5jZVRhcmdldENvbG9yc1xuICAgICAgfSxcbiAgICAgIGluc3RhbmNlU291cmNlUG9zaXRpb25zRlA2NDoge3NpemU6IDQsIHVwZGF0ZTogdGhpcy5jYWxjdWxhdGVJbnN0YW5jZVNvdXJjZVBvc2l0aW9uc30sXG4gICAgICBpbnN0YW5jZVRhcmdldFBvc2l0aW9uc0ZQNjQ6IHtzaXplOiA0LCB1cGRhdGU6IHRoaXMuY2FsY3VsYXRlSW5zdGFuY2VUYXJnZXRQb3NpdGlvbnN9XG4gICAgfSk7XG5cbiAgICB0aGlzLnNldFN0YXRlKHttb2RlbDogdGhpcy5jcmVhdGVNb2RlbChnbCl9KTtcbiAgfVxuXG4gIGRyYXcoe3VuaWZvcm1zfSkge1xuICAgIGNvbnN0IHtnbH0gPSB0aGlzLmNvbnRleHQ7XG4gICAgY29uc3QgbGluZVdpZHRoID0gdGhpcy5zY3JlZW5Ub0RldmljZVBpeGVscyh0aGlzLnByb3BzLnN0cm9rZVdpZHRoKTtcbiAgICBnbC5saW5lV2lkdGgobGluZVdpZHRoKTtcbiAgICB0aGlzLnN0YXRlLm1vZGVsLnJlbmRlcih1bmlmb3Jtcyk7XG4gICAgLy8gU2V0dGluZyBsaW5lIHdpZHRoIGJhY2sgdG8gMSBpcyBoZXJlIHRvIHdvcmthcm91bmQgYSBHb29nbGUgQ2hyb21lIGJ1Z1xuICAgIC8vIGdsLmNsZWFyKCkgYW5kIGdsLmlzRW5hYmxlZCgpIHdpbGwgcmV0dXJuIEdMX0lOVkFMSURfVkFMVUUgZXZlbiB3aXRoXG4gICAgLy8gY29ycmVjdCBwYXJhbWV0ZXJcbiAgICAvLyBUaGlzIGlzIG5vdCBoYXBwZW5pbmcgb24gU2FmYXJpIGFuZCBGaXJlZm94XG4gICAgZ2wubGluZVdpZHRoKDEuMCk7XG4gIH1cblxuICBjcmVhdGVNb2RlbChnbCkge1xuICAgIGxldCBwb3NpdGlvbnMgPSBbXTtcbiAgICBjb25zdCBOVU1fU0VHTUVOVFMgPSA1MDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IE5VTV9TRUdNRU5UUzsgaSsrKSB7XG4gICAgICBwb3NpdGlvbnMgPSBbLi4ucG9zaXRpb25zLCBpLCBpLCBpXTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBNb2RlbCh7XG4gICAgICBnbCxcbiAgICAgIGlkOiB0aGlzLnByb3BzLmlkLFxuICAgICAgLi4uYXNzZW1ibGVTaGFkZXJzKGdsLCB7XG4gICAgICAgIHZzOiBnbHNsaWZ5KCcuL2FyYy1sYXllci12ZXJ0ZXguZ2xzbCcpLFxuICAgICAgICBmczogZ2xzbGlmeSgnLi9hcmMtbGF5ZXItZnJhZ21lbnQuZ2xzbCcpLFxuICAgICAgICBmcDY0OiB0cnVlLFxuICAgICAgICBwcm9qZWN0NjQ6IHRydWVcbiAgICAgIH0pLFxuICAgICAgZ2VvbWV0cnk6IG5ldyBHZW9tZXRyeSh7XG4gICAgICAgIGRyYXdNb2RlOiBHTC5MSU5FX1NUUklQLFxuICAgICAgICBwb3NpdGlvbnM6IG5ldyBGbG9hdDMyQXJyYXkocG9zaXRpb25zKVxuICAgICAgfSksXG4gICAgICBpc0luc3RhbmNlZDogdHJ1ZVxuICAgIH0pO1xuICB9XG5cbiAgY2FsY3VsYXRlSW5zdGFuY2VTb3VyY2VQb3NpdGlvbnMoYXR0cmlidXRlKSB7XG4gICAgY29uc3Qge2RhdGEsIGdldFNvdXJjZVBvc2l0aW9ufSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3Qge3ZhbHVlLCBzaXplfSA9IGF0dHJpYnV0ZTtcbiAgICBsZXQgaSA9IDA7XG4gICAgZm9yIChjb25zdCBvYmplY3Qgb2YgZGF0YSkge1xuICAgICAgY29uc3Qgc291cmNlUG9zaXRpb24gPSBnZXRTb3VyY2VQb3NpdGlvbihvYmplY3QpO1xuICAgICAgW3ZhbHVlW2kgKyAwXSwgdmFsdWVbaSArIDFdXSA9IGZwNjRpZnkoc291cmNlUG9zaXRpb25bMF0pO1xuICAgICAgW3ZhbHVlW2kgKyAyXSwgdmFsdWVbaSArIDNdXSA9IGZwNjRpZnkoc291cmNlUG9zaXRpb25bMV0pO1xuICAgICAgaSArPSBzaXplO1xuICAgIH1cbiAgfVxuXG4gIGNhbGN1bGF0ZUluc3RhbmNlVGFyZ2V0UG9zaXRpb25zKGF0dHJpYnV0ZSkge1xuICAgIGNvbnN0IHtkYXRhLCBnZXRUYXJnZXRQb3NpdGlvbn0gPSB0aGlzLnByb3BzO1xuICAgIGNvbnN0IHt2YWx1ZSwgc2l6ZX0gPSBhdHRyaWJ1dGU7XG4gICAgbGV0IGkgPSAwO1xuICAgIGZvciAoY29uc3Qgb2JqZWN0IG9mIGRhdGEpIHtcbiAgICAgIGNvbnN0IHRhcmdldFBvc2l0aW9uID0gZ2V0VGFyZ2V0UG9zaXRpb24ob2JqZWN0KTtcbiAgICAgIFt2YWx1ZVtpICsgMF0sIHZhbHVlW2kgKyAxXV0gPSBmcDY0aWZ5KHRhcmdldFBvc2l0aW9uWzBdKTtcbiAgICAgIFt2YWx1ZVtpICsgMl0sIHZhbHVlW2kgKyAzXV0gPSBmcDY0aWZ5KHRhcmdldFBvc2l0aW9uWzFdKTtcbiAgICAgIGkgKz0gc2l6ZTtcbiAgICB9XG4gIH1cblxuICBjYWxjdWxhdGVJbnN0YW5jZVNvdXJjZUNvbG9ycyhhdHRyaWJ1dGUpIHtcbiAgICBjb25zdCB7ZGF0YSwgZ2V0U291cmNlQ29sb3J9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7dmFsdWUsIHNpemV9ID0gYXR0cmlidXRlO1xuICAgIGxldCBpID0gMDtcbiAgICBmb3IgKGNvbnN0IG9iamVjdCBvZiBkYXRhKSB7XG4gICAgICBjb25zdCBjb2xvciA9IGdldFNvdXJjZUNvbG9yKG9iamVjdCkgfHwgREVGQVVMVF9DT0xPUjtcbiAgICAgIHZhbHVlW2kgKyAwXSA9IGNvbG9yWzBdO1xuICAgICAgdmFsdWVbaSArIDFdID0gY29sb3JbMV07XG4gICAgICB2YWx1ZVtpICsgMl0gPSBjb2xvclsyXTtcbiAgICAgIHZhbHVlW2kgKyAzXSA9IGlzTmFOKGNvbG9yWzNdKSA/IERFRkFVTFRfQ09MT1JbM10gOiBjb2xvclszXTtcbiAgICAgIGkgKz0gc2l6ZTtcbiAgICB9XG4gIH1cblxuICBjYWxjdWxhdGVJbnN0YW5jZVRhcmdldENvbG9ycyhhdHRyaWJ1dGUpIHtcbiAgICBjb25zdCB7ZGF0YSwgZ2V0VGFyZ2V0Q29sb3J9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7dmFsdWUsIHNpemV9ID0gYXR0cmlidXRlO1xuICAgIGxldCBpID0gMDtcbiAgICBmb3IgKGNvbnN0IG9iamVjdCBvZiBkYXRhKSB7XG4gICAgICBjb25zdCBjb2xvciA9IGdldFRhcmdldENvbG9yKG9iamVjdCkgfHwgREVGQVVMVF9DT0xPUjtcbiAgICAgIHZhbHVlW2kgKyAwXSA9IGNvbG9yWzBdO1xuICAgICAgdmFsdWVbaSArIDFdID0gY29sb3JbMV07XG4gICAgICB2YWx1ZVtpICsgMl0gPSBjb2xvclsyXTtcbiAgICAgIHZhbHVlW2kgKyAzXSA9IGlzTmFOKGNvbG9yWzNdKSA/IERFRkFVTFRfQ09MT1JbM10gOiBjb2xvclszXTtcbiAgICAgIGkgKz0gc2l6ZTtcbiAgICB9XG4gIH1cblxufVxuIl19